// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.0
// source: query.sql

package queries

import (
	"context"
	"database/sql"
)

const createURLs = `-- name: CreateURLs :execresult

INSERT INTO urls (original_url, tiny_url) VALUES (?, ?)
`

type CreateURLsParams struct {
	OriginalUrl string
	TinyUrl     string
}

func (q *Queries) CreateURLs(ctx context.Context, arg CreateURLsParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, createURLs, arg.OriginalUrl, arg.TinyUrl)
}

const getOriginalURLByTinyURL = `-- name: GetOriginalURLByTinyURL :one

SELECT original_url FROM urls WHERE tiny_url = ?
`

func (q *Queries) GetOriginalURLByTinyURL(ctx context.Context, tinyUrl string) (string, error) {
	row := q.db.QueryRowContext(ctx, getOriginalURLByTinyURL, tinyUrl)
	var original_url string
	err := row.Scan(&original_url)
	return original_url, err
}

const getTinyURLByOriginalURL = `-- name: GetTinyURLByOriginalURL :one

SELECT tiny_url FROM urls WHERE original_url = ?
`

func (q *Queries) GetTinyURLByOriginalURL(ctx context.Context, originalUrl string) (string, error) {
	row := q.db.QueryRowContext(ctx, getTinyURLByOriginalURL, originalUrl)
	var tiny_url string
	err := row.Scan(&tiny_url)
	return tiny_url, err
}
